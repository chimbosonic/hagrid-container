apiVersion: apps/v1
kind: Deployment
metadata:
  name: hagrid
  labels:
    app: hagrid
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hagrid
  template:
    metadata:
      labels:
        app: hagrid
    spec:
      containers:
      - name: hagrid
        image: chimbosonic/hagrid:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        env:
        - name: DATABASE_NAME
          value: 'hagrid_ng'        
        volumeMounts:
        - name: hagrid-persistence
          mountPath: /var/lib/hagrid
     
        
      restartPolicy: Always
      volumes:
      - name: hagrid-persistence
        persistentVolumeClaim:
          claimName: hagrid-persistence-files-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: hagrid
  labels:
    kubernetes.io/service-name: hagrid
spec:
  ports:
  - name: hagrid
    port: 8000
    targetPort: 8000
  selector:
    app: hagrid
    
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hagrid-persistence-files-pvc
  labels:
    pvcname: hagrid-persistence-files-pvc
spec:  
  storageClassName: hagridstorageclass
  accessModes:
  - ReadWriteOnce #ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hagridstorageclass
provisioner: rancher.io/local-path
#provisioner: csi-cinder-sc-retain
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hagrid
spec:
  rules:
  - host: "hagrid.ss.es"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: hagrid
              port:
                number: 80